import { useState} from 'react'
import './App.scss'

const foods = [
	{
		name: 'üçî',
		price: 30,
		amount: 10,
	},
	{
		name: 'üç®',
		price: 20,
		amount: 3,
	},
	{
		name: 'üçø',
		price: 10,
		amount: 5,
	},
	{
		name: 'üçµ',
		price: 5,
		amount: 9,
	},
]

export default function App() {
  const [arrfoods, setArrfoods] = useState(foods)
  const [result, setResult] = useState()

  const createId = () => {
    const foodsId = [...arrfoods]
      foodsId.map( (elem, index) => {
      elem.id = index + 1
    })
    setArrfoods(foodsId)
  }

  const increasePrice = () => {
    const foodsPrice = [...arrfoods]
    foodsPrice.map( (elem, index) => {
       if (index > 0) {
        elem.price = elem.price + 4
      }
    })
    setArrfoods(foodsPrice)
  }

  const totalPrice = () => {
    let n = 0
    arrfoods.forEach( elem => {
      n = n + elem.price * elem.amount
    })
    setResult(n)
  }

  const decreaseAmount = () => {
    const foodsAmount = [...arrfoods]
    foodsAmount.map( (elem) => {
      if (elem.name === 'üçµ' && elem.amount > 0 || elem.name === 'üçø' && elem.amount > 0) {
        elem.amount = elem.amount - 1
      }
    })
    setArrfoods(foodsAmount)
  }

  const minAmount = () => {
    let x = 0
    let foodMin = ''
    arrfoods.forEach( (elem, index) => {
      if (index === 0) {
        x = elem.amount
        foodMin = elem.name
      } else if (x > elem.amount) {
        x = elem.amount
        foodMin = elem.name
      }
    })
    setResult(foodMin)
  }

  const hasFoodStoke = () => {
    const foodStoke = [...arrfoods].map( elem => {
      if (elem.amount > 0) {
        elem.inStoke = 'true'
      } else {
        delete elem.inStoke;
				return elem
      }
    })
    setArrfoods(foodStoke);
  }

  const foodsSort = () => {
    setArrfoods([...arrfoods.sort( (a, b) => b.price - a.price)])
  }

  const fooodsDiscount = () => {
    const foodsDis = [...arrfoods]
    foodsDis.map( elem => {
      if (elem.id === 1 || elem.id === 3) {
        elem.price = Math.trunc((elem.price * 30/ 100) + elem.price)
      }
    })
    setArrfoods(foodsDis)
  }
  
  return (
    <div className='container'>
      <nav>
        <button onClick={createId}>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ id</button>
        <button onClick={increasePrice}>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ 4$</button>
        <button onClick={totalPrice}>–û–±—â–∞—è —Ü–µ–Ω–∞</button>
        <button onClick={decreaseAmount}>–£–º–µ–Ω—å—à–µ–Ω–∏–µ –Ω–∞ 1</button>
        <button onClick={minAmount}>–ù–∞–∏–º–µ–Ω—å—à–µ–µ –∫–æ–ª-–≤–æ –µ–¥—ã</button>
        <button onClick={hasFoodStoke}>–ï—Å–ª–∏ –∫–æ–ª-–≤–æ –±–æ–ª—å—à–µ 0</button>
        <button onClick={foodsSort}>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</button>
        <button onClick={fooodsDiscount}>–ê–∫—Ü–∏—è +30%, –ø–ª–∞—Ç–∏ –±–æ–ª—å—à–µ –∫—É—à–∞–π –º–µ–Ω—å—à–µ</button>
        
      </nav>
      <h3>Result: <span>{result}</span></h3>
      
      <Component data={arrfoods}/>
    </div>
  )
}

function Component(props) {
  return (
    <div className='flex'>
      {
        props.data.map( elem => {
          return (
            <div key={elem.name} className='flex__item'>
              <h2 className='flex__title'>{elem.name}</h2>
              <p className='flex__price'>Price: {elem.price}</p>
              <p className='flex__amount'>Amount: {elem.amount}</p>
              <p className='flex__stoke'>{elem.inStoke}</p>
              <span className='flex__id'>{elem.id}</span>
            </div>
          )
        })
      }
    </div>
  )
}